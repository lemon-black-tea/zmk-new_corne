#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        home_pgup: home_pgup {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp HOME>, <&kp PAGE_UP>;

            label = "HOME_PGUP";
        };

        end_pgdown: end_pgdown {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp END>, <&kp PAGE_DOWN>;

            label = "END_PGDOWN";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "base";
            bindings = <
&rgb_ug RGB_TOG  &kp Q        &kp W         &kp F           &kp P        &kp B                                   &none         &kp J                   &kp L            &kp U       &kp Y        &kp SEMI     &none
&bt BT_CLR_ALL   &mt LCTRL A  &mt LSHIFT R  &mt LEFT_ALT S  &mt LCMD T   &mt LS(LA(LC(LCMD))) G           &none  &none  &none  &mt RS(RA(RC(RCMD))) M  &mt RCMD N       &mt RALT E  &mt RSHFT I  &mt RCTRL O  &none
&none            &kp Z        &kp X         &kp C           &kp D        &kp V                   &none           &none         &kp K                   &kp H            &kp COMMA   &kp DOT      &kp FSLH     &none
                                            &lt 3 ESC       &lt 1 SPACE  &lt 2 TAB                                             &kp ENTER               &lt 4 BACKSPACE  &kp DEL
            >;

            // sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Navigation {
            display-name = "nav";
            bindings = <
&none  &none  &none  &none   &none   &none                   &none         &none        &none     &kp UP_ARROW  &none            &none  &none
&none  &none  &none  &none   &none   &none            &none  &none  &none  &home_pgup   &kp LEFT  &kp DOWN      &kp RIGHT_ARROW  &none  &none
&none  &none  &none  &none   &none   &none   &none           &none         &end_pgdown  &none     &none         &none            &none  &none
                     &trans  &trans  &trans                                &trans       &trans    &trans
            >;
        };

        Symbol {
            display-name = "sym";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans     &trans     &kp SPACE                                                             &kp RET    &trans     &trans
            >;
        };

        Number {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &kp N7  &kp N8  &kp N9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &kp N1  &kp N2  &kp N3  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;

            label = "num";
        };

        Control {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;

            label = "control";
        };
    };
};
