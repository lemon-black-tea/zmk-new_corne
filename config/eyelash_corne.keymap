#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        home_pgup: home_pgup {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp HOME>, <&kp PAGE_UP>;

            label = "HOME_PGUP";
        };

        end_pgdown: end_pgdown {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp END>, <&kp PAGE_DOWN>;

            label = "END_PGDOWN";
        };

        prev_vdown: prev_vdown {
            compatible = "zmk,behavior-tap-dance";
            label = "PREV_VDOWN";
            #binding-cells = <0>;
            bindings = <&kp C_PREV>, <&kp C_VOLUME_DOWN>;
        };

        next_vup: next_vup {
            compatible = "zmk,behavior-tap-dance";
            label = "NEXT_VUP";
            #binding-cells = <0>;
            bindings = <&kp C_NEXT>, <&kp C_VOLUME_UP>;
        };

        pause_mute: pause_mute {
            compatible = "zmk,behavior-tap-dance";
            label = "PAUSE_MUTE";
            #binding-cells = <0>;
            bindings = <&kp C_PLAY_PAUSE>, <&kp C_MUTE>;
        };

        searchFiles_clipboard: searchFiles_clipboard {
            compatible = "zmk,behavior-tap-dance";
            label = "SEARCHFILES_CLIPBOARD";
            #binding-cells = <0>;
            bindings = <&kp LS(SPACE)>, <&kp LG(LA(LC(PERIOD)))>;
        };

        searchMenu_IME: searchMenu_IME {
            compatible = "zmk,behavior-tap-dance";
            label = "SEARCHMENU_IME";
            #binding-cells = <0>;
            bindings = <&kp LG(LA(LC(SPACE)))>, <&kp LA(LC(SPACE))>;
        };

        ug_hue_sat_up: ug_hue_sat_up {
            compatible = "zmk,behavior-tap-dance";
            label = "UG_HUE_SAT_UP";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_SAI>;
        };

        ug_hue_sat_dn: ug_hue_sat_dn {
            compatible = "zmk,behavior-tap-dance";
            label = "UG_HUE_SAT_DN";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUD>, <&rgb_ug RGB_SAD>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "base";
            bindings = <
&kp LG(SPACE)  &kp Q        &kp W         &kp F           &kp P       &kp B                                           &none         &kp J                            &kp L        &kp U            &kp Y        &kp LA(LC(SPACE))  &kp F12
&none          &mt LCTRL A  &mt LSHIFT R  &mt LEFT_ALT S  &mt LCMD T  &mt LG(LA(LS(LEFT_CONTROL))) G           &none  &none  &none  &mt RG(RA(RS(RIGHT_CONTROL))) M  &mt RCMD N   &mt RALT E       &mt RSHFT I  &mt RCTRL O        &none
&none          &kp Z        &kp X         &kp C           &kp D       &kp V                           &none           &none         &kp K                            &kp H        &kp COMMA        &kp PERIOD   &kp APOSTROPHE     &none
                                          &lt 3 DELETE    &lt 2 TAB   &lt 1 ESCAPE                                                  &lt 4 RETURN                     &lt 5 SPACE  &lt 6 BACKSPACE
            >;

            // sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        One-hand-ops {
            label = "one-hand";
            bindings = <
&none  &none  &kp LG(Z)      &kp LG(X)  &kp LG(V)      &kp LG(C)                      &none         &none   &none   &none   &none  &none  &none
&none  &none  &kp LG(LS(Z))  &none      &kp LG(LS(V))  &kp LG(LS(C))           &none  &none  &none  &none   &none   &none   &none  &none  &none
&none  &none  &none          &none      &none          &kp LA(C)      &none           &none         &none   &none   &none   &none  &none  &none
                             &trans     &trans         &trans                                       &trans  &trans  &trans
            >;
        };

        Navigation {
            display-name = "nav";
            bindings = <
&none  &none      &none      &none     &none     &none                   &none         &kp HOME  &kp LEFT_BRACKET  &kp UP_ARROW  &kp RIGHT_BRACKET  &kp PAGE_UP    &none
&none  &kp LCTRL  &kp LSHFT  &kp LALT  &kp LCMD  &none            &none  &none  &none  &kp END   &kp LEFT          &kp DOWN      &kp RIGHT          &kp PAGE_DOWN  &none
&none  &none      &none      &none     &none     &none   &none           &none         &none     &none             &none         &none              &none          &none
                             &trans    &trans    &trans                                &trans    &trans            &trans
            >;
        };

        Numpad {
            bindings = <
&none  &none  &none  &none   &none   &none                   &none         &kp PLUS   &kp N7  &kp N8  &kp N9  &kp ASTRK   &none
&none  &none  &none  &none   &none   &none            &none  &none  &none  &kp N0     &kp N4  &kp N5  &kp N6  &kp PERIOD  &none
&none  &none  &none  &none   &none   &none   &none           &none         &kp MINUS  &kp N1  &kp N2  &kp N3  &kp SLASH   &none
                     &trans  &trans  &trans                                &trans     &trans  &trans
            >;

            label = "numpad";
        };

        Symbol {
            label = "sym";
            bindings = <
&none  &kp AT_SIGN         &kp AMPERSAND     &kp PERCENT     &kp CARET      &kp ASTERISK                                         &none         &kp UNDERSCORE               &kp DOLLAR      &kp HASH        &kp PIPE              &none                  &none
&none  &mt LCTRL QUESTION  &mt LSHIFT COLON  &mt LALT EQUAL  &mt LGUI PLUS  &mt LG(LA(LS(LCTRL))) DOUBLE_QUOTES           &none  &none  &none  &mt RG(RA(RS(RCTRL))) GRAVE  &mt RGUI MINUS  &mt RALT TILDE  &mt RSHIFT SEMICOLON  &mt RCTRL EXCLAMATION  &none
&none  &none               &none             &none           &none          &none                                &none           &none         &none                        &none           &none           &none                 &none                  &none
                                             &trans          &trans         &trans                                                             &trans                       &trans          &trans
            >;
        };

        Num-sym {
            bindings = <
&none  &kp N4           &kp N3               &kp N2               &kp N1                 &kp N0                                      &none         &kp N5                      &kp N6                  &kp N7                &kp N8                  &kp N9               &none
&none  &mt LCTRL SLASH  &mt LSHFT LESS_THAN  &mt LALT LEFT_BRACE  &mt LGUI LEFT_BRACKET  &mt LG(LA(LS(LCTRL))) LPAR           &none  &none  &none  &mt RG(RA(RS(RCTRL))) RPAR  &mt RGUI RIGHT_BRACKET  &mt RALT RIGHT_BRACE  &mt RSHFT GREATER_THAN  &mt RCTRL BACKSLASH  &none
&none  &none            &none                &none                &none                  &none                       &none           &none         &none                       &none                   &none                 &none                   &none                &none
                                             &trans               &trans                 &trans                                                    &trans                      &trans                  &trans
            >;

            label = "num-sym";
        };

        Control {
            bindings = <
&rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &kp C_PREV            &kp C_PLAY_PAUSE  &kp C_NEXT                            &none         &none   &none   &none   &none  &none  &none
&bt BT_CLR_ALL   &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &kp C_VOLUME_DOWN     &kp C_MUTE        &kp C_VOLUME_UP                &none  &none  &none  &none   &none   &none   &none  &none  &none
&bootloader      &ug_hue_sat_dn   &ug_hue_sat_up   &kp C_BRIGHTNESS_DEC  &kp LG(LC(Q))     &kp C_BRIGHTNESS_INC  &none           &none         &none   &none   &none   &none  &none  &bootloader
                                                   &trans                &trans            &trans                                              &trans  &trans  &trans
            >;

            label = "control";
        };
    };
};
